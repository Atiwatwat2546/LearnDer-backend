import React, { useState, useEffect } from 'react'; // р╕Щр╕│р╣Ар╕Вр╣Йр╕▓ React р╣Бр╕ер╕░ Hook р╕Хр╣Ир╕▓р╕Зр╣Ж р╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ
import { ArrowLeft, MessageSquare, BookOpen, ZoomIn, ZoomOut, RotateCcw, Bot, CheckCircle, Home } from 'lucide-react';// р╕Щр╕│р╣Ар╕Вр╣Йр╕▓р╣Др╕нр╕Др╕нр╕Щр╕Ир╕▓р╕Б lucide-react
import ChatBot from './ChatBot'; // р╕Щр╕│р╣Ар╕Вр╣Йр╕▓р╕Др╕нр╕бр╣Вр╕Юр╣Ар╕Щр╕Щр╕Хр╣М ChatBot

// р╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Вр╕нр╕З props р╕Чр╕╡р╣Ир╕Ир╕░р╕гр╕▒р╕Ър╣Ар╕Вр╣Йр╕▓р╕бр╕▓
interface BookReaderProps { 
  book: {
    id: string;
    title: string;
    author: string;
  };
  onBack: () => void; // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕Фр╕┤р╕б
  onBackToLibrary: () => void; // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕вр╕▒р╕Зр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф
}

// р╕Др╕нр╕бр╣Вр╕Юр╣Ар╕Щр╕Щр╕Хр╣Мр╕лр╕ер╕▒р╕Б BookReader
const BookReader: React.FC<BookReaderProps> = ({ book, onBack, onBackToLibrary }) => {
  const [showChat, setShowChat] = useState(false); // р╕кр╕Цр╕▓р╕Щр╕░р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕кр╕Фр╕Зр╕лр╕гр╕╖р╕нр╕Лр╣Ир╕нр╕Щ AI Chat
  const [currentPage, setCurrentPage] = useState(1); // р╕кр╕Цр╕▓р╕Щр╕░р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕Бр╣Зр╕Ър╕лр╕Щр╣Йр╕▓р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щр╕Чр╕╡р╣Ир╕нр╣Ир╕▓р╕Щр╕нр╕вр╕╣р╣И
  const [zoom, setZoom] = useState(100); // р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Лр╕╣р╕б (р╕Ыр╕гр╕▒р╕Ър╕Вр╕Щр╕▓р╕Фр╕Хр╕▒р╕зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н)
  const [totalPages] = useState(45); // р╕Ир╕│р╕Щр╕зр╕Щр╕лр╕Щр╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (mock р╣Бр╕Ър╕Ър╕Ир╕│р╕ер╕нр╕Зр╣Др╕зр╣Й 45 р╕лр╕Щр╣Йр╕▓)
  const [isFinished, setIsFinished] = useState(false); // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕Ьр╕╣р╣Йр╕нр╣Ир╕▓р╕Щр╕нр╣Ир╕▓р╕Щр╕Ир╕Ър╕лр╕гр╕╖р╕нр╕вр╕▒р╕З

  // useEffect р╕Ир╕░р╕Чр╕│р╕Зр╕▓р╕Щр╣Ар╕бр╕╖р╣Ир╕н currentPage р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щ
  useEffect(() => {
    if (currentPage >= totalPages) { // р╕Цр╣Йр╕▓р╕нр╣Ир╕▓р╕Щр╕Цр╕╢р╕Зр╕лр╕Щр╣Йр╕▓р╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕вр╣Гр╕лр╣Йр╕Цр╕╖р╕нр╕зр╣Ир╕▓р╕нр╣Ир╕▓р╕Щр╕Ир╕Ъ
      setIsFinished(true);
    } else {
      setIsFinished(false);
    }
  }, [currentPage, totalPages]);

  // р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╣Бр╕Ър╕Ъ mock , this would come from API/PDF
  const mockContent = {
    1: {
      title: "р╕Ър╕Чр╕Чр╕╡р╣И 1: р╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╕Вр╕нр╕Зр╕зр╕▒р╕Хр╕Цр╕╕",
      content: `р╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Ар╕Ыр╣Зр╕Щр╕Ыр╕гр╕▓р╕Бр╕Пр╕Бр╕▓р╕гр╕Ур╣Мр╕Чр╕╡р╣Ир╣Ар╕гр╕▓р╕Юр╕Ър╣Ар╕лр╣Зр╕Щр╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щр╕нр╕вр╕╣р╣Ир╣Ар╕кр╕бр╕н р╣Др╕бр╣Ир╕зр╣Ир╕▓р╕Ир╕░р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╣Ар╕Фр╕┤р╕Щр╕Вр╕нр╕Зр╕Др╕Щ р╕Бр╕▓р╕гр╕зр╕┤р╣Ир╕Зр╕Вр╕нр╕Зр╕кр╕▒р╕Хр╕зр╣М р╕лр╕гр╕╖р╕нр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╕Вр╕нр╕Зр╕вр╕▓р╕Щр╕Юр╕▓р╕лр╕Щр╕░р╕Хр╣Ир╕▓р╕Зр╣Ж

р╣Гр╕Щр╕Ър╕Чр╕Щр╕╡р╣Йр╣Ар╕гр╕▓р╕Ир╕░р╕бр╕▓р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ъ:
тАв р╕Др╕зр╕▓р╕бр╕лр╕бр╕▓р╕вр╕Вр╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣И
тАв р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Вр╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣И
тАв р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕зр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Ир╕З
тАв р╕Бр╕Ор╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╕Вр╕нр╕Зр╕Щр╕┤р╕зр╕Хр╕▒р╕Щ

р╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣И (Motion) р╕лр╕бр╕▓р╕вр╕Цр╕╢р╕З р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Вр╕нр╕Зр╕зр╕▒р╕Хр╕Цр╕╕р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕Чр╕╡р╕вр╕Ър╕Бр╕▒р╕Ър╕Ир╕╕р╕Фр╕нр╣Йр╕▓р╕Зр╕нр╕┤р╕Зр╕лр╕Щр╕╢р╣Ир╕Зр╣Ж р╕Хр╕▓р╕бр╣Ар╕зр╕ер╕▓р╕Чр╕╡р╣Ир╕Ьр╣Ир╕▓р╕Щр╣Др╕Ы

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щ:
1. р╕гр╕Цр╕вр╕Щр╕Хр╣Мр╕зр╕┤р╣Ир╕Зр╕Ър╕Щр╕Цр╕Щр╕Щ - р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Бр╕Ър╕Ър╣Ар╕кр╣Йр╕Щр╕Хр╕гр╕З
2. р╣Ар╕Вр╣Зр╕бр╕Щр╕▓р╕мр╕┤р╕Бр╕▓ - р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Бр╕Ър╕Ър╕лр╕бр╕╕р╕Щ
3. р╕ер╕╣р╕Бр╕Ър╕нр╕ер╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╣Вр╕вр╕Щр╕Вр╕╢р╣Йр╕Щр╣Др╕Ыр╣Гр╕Щр╕нр╕▓р╕Бр╕▓р╕и - р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Бр╕Ър╕Ър╣Вр╕Др╣Йр╕З

р╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓р╕Бр╕▓р╕гр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╕Ир╕░р╕Кр╣Ир╕зр╕вр╣Гр╕лр╣Йр╣Ар╕гр╕▓р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Шр╕гр╕гр╕бр╕Кр╕▓р╕Хр╕┤р╣Бр╕ер╕░р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Щр╕│р╣Др╕Ыр╕Ыр╕гр╕░р╕вр╕╕р╕Бр╕Хр╣Мр╣Гр╕Кр╣Йр╣Гр╕Щр╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ър╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Ир╕▒р╕Бр╕гр╣Бр╕ер╕░р╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╕Хр╣Ир╕▓р╕Зр╣Ж р╣Др╕Фр╣Й`
    },
    2: {
      title: "р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕зр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Ир╕З",
      content: `р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з (Speed) р╕Др╕╖р╕н р╕нр╕▒р╕Хр╕гр╕▓р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╕Вр╕нр╕Зр╕гр╕░р╕вр╕░р╕Чр╕▓р╕Зр╕Хр╣Ир╕нр╕лр╕Щр╣Ир╕зр╕вр╣Ар╕зр╕ер╕▓

р╕кр╕╣р╕Хр╕гр╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕Ур╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з:
р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з = р╕гр╕░р╕вр╕░р╕Чр╕▓р╕З ├╖ р╣Ар╕зр╕ер╕▓
v = s ├╖ t

р╕лр╕Щр╣Ир╕зр╕вр╕Вр╕нр╕Зр╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з:
тАв р╣Ар╕бр╕Хр╕гр╕Хр╣Ир╕нр╕зр╕┤р╕Щр╕▓р╕Чр╕╡ (m/s)
тАв р╕Бр╕┤р╣Вр╕ер╣Ар╕бр╕Хр╕гр╕Хр╣Ир╕нр╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З (km/h)
тАв р╣Др╕бр╕ер╣Мр╕Хр╣Ир╕нр╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З (mph)

р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Ир╕З (Acceleration) р╕Др╕╖р╕н р╕нр╕▒р╕Хр╕гр╕▓р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╕Вр╕нр╕Зр╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕зр╕Хр╣Ир╕нр╕лр╕Щр╣Ир╕зр╕вр╣Ар╕зр╕ер╕▓

р╕кр╕╣р╕Хр╕гр╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕Ур╕Др╕зр╕▓р╕бр╣Ар╕гр╣Ир╕З:
р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Ир╕З = р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з ├╖ р╣Ар╕зр╕ер╕▓
a = (vтВВ - vтВБ) ├╖ t

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕У:
р╕гр╕Цр╕вр╕Щр╕Хр╣Мр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╕Фр╣Йр╕зр╕вр╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з 60 km/h р╣Ар╕Ыр╣Зр╕Щр╣Ар╕зр╕ер╕▓ 2 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З
р╕гр╕░р╕вр╕░р╕Чр╕▓р╕Зр╕Чр╕╡р╣Ир╕гр╕Цр╣Ар╕Др╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╣Ир╣Др╕Фр╣Й = 60 ├Ч 2 = 120 р╕Бр╕┤р╣Вр╕ер╣Ар╕бр╕Хр╕г`
    }
  };
 
  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Фр╕╢р╕Зр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щр╕Хр╕▓р╕бр╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕Бр╕│р╕ер╕▒р╕Зр╕нр╣Ир╕▓р╕Щ
  const getCurrentContent = () => {
    return mockContent[currentPage as keyof typeof mockContent] || {
      title: `р╕лр╕Щр╣Йр╕▓ ${currentPage}`,
      content: "р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕Вр╕нр╕Зр╕лр╕Щр╣Йр╕▓р╕Щр╕╡р╣Йр╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Ф..."
    };
  };
  
  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕зр╕Ър╕Др╕╕р╕бр╕Бр╕▓р╕гр╕Лр╕╣р╕б
  const handleZoomIn = () => setZoom(prev => Math.min(prev + 25, 200));
  const handleZoomOut = () => setZoom(prev => Math.max(prev - 25, 50));
  const handleResetZoom = () => setZoom(100);

  // р╣Бр╕кр╕Фр╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╣Ар╕бр╕╖р╣Ир╕нр╕нр╣Ир╕▓р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Ир╕Ър╣Бр╕ер╣Йр╕з
  if (isFinished) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-teal-50 flex items-center justify-center">
        <div className="max-w-2xl mx-auto px-4 text-center">
          <div className="bg-white rounded-3xl shadow-2xl p-8 sm:p-12">
            {/* р╣Др╕нр╕Др╕нр╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И */}
            <div className="mb-8">
              <div className="w-24 h-24 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6">
                <CheckCircle className="h-12 w-12 text-white" />
              </div>
              {/* р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╕Др╕зр╕▓р╕бр╕вр╕┤р╕Щр╕Фр╕╡ */}
              <h1 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
                ЁЯОЙ р╕вр╕┤р╕Щр╕Фр╕╡р╕Фр╣Йр╕зр╕в!
              </h1>
              <h2 className="text-xl sm:text-2xl text-gray-700 mb-2">
                р╕Др╕╕р╕Ур╕нр╣Ир╕▓р╕Щр╕Ир╕Ър╣Бр╕ер╣Йр╕з
              </h2>
              <p className="text-lg text-blue-600 font-medium mb-6">
                "{book.title}"
              </p>
              <p className="text-gray-600 mb-8">
                р╕Др╕╕р╕Ур╣Др╕Фр╣Йр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕Др╕гр╕Ър╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф {totalPages} р╕лр╕Щр╣Йр╕▓
                <br />
                р╕Юр╕гр╣Йр╕нр╕бр╣Бр╕ер╣Йр╕зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╣Гр╕лр╕бр╣И!
              </p>
            </div>

            {/* р╕Ыр╕╕р╣Ир╕бр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╣Гр╕лр╕бр╣Ир╕лр╕гр╕╖р╕нр╕нр╣Ир╕▓р╕Щр╕Лр╣Йр╕│ */}
            <div className="space-y-4">
              <button
                onClick={onBackToLibrary}
                className="w-full bg-gradient-to-r from-blue-600 to-teal-600 text-white py-4 px-6 rounded-xl hover:from-blue-700 hover:to-teal-700 transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:-translate-y-1 flex items-center justify-center space-x-2"
              >
                <Home className="h-5 w-5" />
                <span>р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╣Гр╕лр╕бр╣И</span>
              </button>
              
              <button
                onClick={() => {
                  setCurrentPage(1);
                  setIsFinished(false);
                }}
                className="w-full bg-gray-100 text-gray-700 py-3 px-6 rounded-xl hover:bg-gray-200 transition-all duration-200 font-medium flex items-center justify-center space-x-2"
              >
                <BookOpen className="h-5 w-5" />
                <span>р╕нр╣Ир╕▓р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Щр╕╡р╣Йр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З</span>
              </button>
            </div>

            {/* ЁЯФЧ р╕Ир╕╕р╕Фр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Бр╕▒р╕Ъ backend */}
            <div className="mt-8 p-4 bg-green-50 rounded-lg border-l-4 border-green-400">
              <p className="text-sm text-green-700">
                ЁЯФЧ <strong>Backend Connection:</strong> р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Гр╕Щр╕Бр╕▓р╕гр╕нр╣Ир╕▓р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Ир╕Ъ
              </p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // р╕кр╣Ир╕зр╕Щр╕лр╕ер╕▒р╕Бр╕Вр╕нр╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕нр╣Ир╕▓р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b sticky top-0 z-40">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-4">
              <button
                onClick={onBack}
                className="flex items-center space-x-2 text-gray-600 hover:text-blue-600 transition-colors"
              >
                <ArrowLeft className="h-5 w-5" />
                <span className="hidden sm:inline">р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф</span>
              </button>
              <div className="h-6 w-px bg-gray-300 hidden sm:block" />
              <div className="flex items-center space-x-2">
                <BookOpen className="h-5 w-5 text-blue-600" />
                <div>
                  <h1 className="font-semibold text-gray-900 text-sm sm:text-base">{book.title}</h1>
                  <p className="text-xs text-gray-600 hidden sm:block">{book.author}</p>
                </div>
              </div>
            </div>
            
            {/* р╕Ыр╕╕р╣Ир╕бр╕Др╕зр╕Ър╕Др╕╕р╕бр╕Лр╕╣р╕б р╣Бр╕ер╕░ AI Chat */}
            <div className="flex items-center space-x-2 sm:space-x-4">
              {/* Zoom Controls */}
              <div className="hidden sm:flex items-center space-x-1 bg-gray-100 rounded-lg p-1">
                <button
                  onClick={handleZoomOut}
                  className="p-1 hover:bg-white rounded transition-colors"
                  title="р╕Лр╕╣р╕бр╕нр╕нр╕Б"
                >
                  <ZoomOut className="h-4 w-4 text-gray-600" />
                </button>
                <span className="text-xs text-gray-600 px-2">{zoom}%</span>
                <button
                  onClick={handleZoomIn}
                  className="p-1 hover:bg-white rounded transition-colors"
                  title="р╕Лр╕╣р╕бр╣Ар╕Вр╣Йр╕▓"
                >
                  <ZoomIn className="h-4 w-4 text-gray-600" />
                </button>
                <button
                  onClick={handleResetZoom}
                  className="p-1 hover:bg-white rounded transition-colors"
                  title="р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Лр╕╣р╕б"
                >
                  <RotateCcw className="h-4 w-4 text-gray-600" />
                </button>
              </div>

              {/* р╕Ыр╕╕р╣Ир╕бр╣Ар╕Ыр╕┤р╕Ф/р╕Ыр╕┤р╕Ф AI */}
              <button
                onClick={() => setShowChat(!showChat)}
                className={`flex items-center space-x-2 px-3 py-2 rounded-lg font-medium transition-all ${
                  showChat
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-blue-100 text-blue-600 hover:bg-blue-200'
                }`}
              >
                <Bot className="h-4 w-4" />
                <span className="hidden sm:inline">AI р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в</span>
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╣Бр╕ер╕░ ChatBot */}
      <div className="flex h-[calc(100vh-4rem)]">
        {/* р╕кр╣Ир╕зр╕Щр╣Бр╕кр╕Фр╕Зр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н */}
        <div className={`transition-all duration-300 ${showChat ? 'w-1/2' : 'w-full'}`}>
          <div className="h-full overflow-y-auto">
            <div className="max-w-4xl mx-auto p-4 sm:p-6 lg:p-8">
              {/* р╕Ыр╕╕р╣Ир╕бр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕лр╕Щр╣Йр╕▓ */}
              <div className="flex items-center justify-between mb-6 bg-white rounded-lg p-4 shadow-sm">
                <button
                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}
                  disabled={currentPage === 1}
                  className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                >
                  р╕лр╕Щр╣Йр╕▓р╕Бр╣Ир╕нр╕Щ
                </button>
                
                <div className="flex items-center space-x-4">
                  <span className="text-sm text-gray-600">
                    р╕лр╕Щр╣Йр╕▓ {currentPage} р╕Ир╕▓р╕Б {totalPages}
                  </span>
                  <div className="w-32 bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                      style={{ width: `${(currentPage / totalPages) * 100}%` }}
                    />
                  </div>
                </div>

                <button
                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}
                  disabled={currentPage === totalPages}
                  className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                >
                  р╕лр╕Щр╣Йр╕▓р╕Цр╕▒р╕Фр╣Др╕Ы
                </button>
              </div>

              {/* р╣Бр╕кр╕Фр╕Зр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н */}
              <div 
                className="bg-white rounded-xl shadow-lg p-6 sm:p-8 lg:p-12 min-h-[600px]"
                style={{ fontSize: `${zoom}%` }}
              >
                <div className="prose prose-lg max-w-none">
                  <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-6 text-center">
                    {getCurrentContent().title}
                  </h2>
                  <div className="text-gray-700 leading-relaxed whitespace-pre-line">
                    {getCurrentContent().content}
                  </div>
                </div>

                {/* ЁЯФЧ р╕Др╕нр╕бр╣Ар╕бр╕Щр╕Хр╣М: р╕Ир╕╕р╕Фр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Бр╕▒р╕Ъ backend р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Вр╕лр╕ер╕Фр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓ */}
                <div className="mt-8 p-4 bg-blue-50 rounded-lg border-l-4 border-blue-400">
                  <p className="text-sm text-blue-700">
                    ЁЯФЧ <strong>Backend Connection:</strong> р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Ир╕░р╕Цр╕╣р╕Бр╕Фр╕╢р╕Зр╕Ир╕▓р╕Б Database/PDF Processing API
                  </p>
                </div>
              </div>

              {/* р╕Ыр╕╕р╣Ир╕бр╣Ар╕Ыр╕┤р╕Ф AI */}
              <div className="mt-6 flex flex-wrap gap-3 justify-center">
                <button
                  onClick={() => setShowChat(true)}
                  className="flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-purple-500 text-white px-4 py-2 rounded-lg hover:from-blue-600 hover:to-purple-600 transition-all shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
                >
                  <MessageSquare className="h-4 w-4" />
                  <span>р╕Цр╕▓р╕б AI р╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕Щр╕╡р╣Й</span>
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Sidebar р╣Бр╕Кр╕Чр╕Бр╕▒р╕Ъ AI */}
        {showChat && (
          <div className="w-1/2 border-l bg-white">
            <div className="h-full flex flex-col">
              <div className="p-4 border-b bg-gradient-to-r from-blue-600 to-purple-600 text-white">
                <div className="flex items-center justify-between">
                  <h3 className="font-semibold">AI р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╕Бр╕▓р╕гр╕нр╣Ир╕▓р╕Щ</h3>
                  <button
                    onClick={() => setShowChat(false)}
                    className="text-white hover:text-gray-200 transition-colors"
                  >
                    ├Ч
                  </button>
                </div>
                <p className="text-sm text-blue-100 mt-1">
                  р╕Цр╕▓р╕бр╕Др╕│р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ъ "{book.title}" р╕лр╕Щр╣Йр╕▓ {currentPage}
                </p>
              </div>
              {/* р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╣Бр╕Кр╕Ч */}
              <div className="flex-1">
                <ChatBot 
                  selectedBook={book} 
                  currentPage={currentPage}
                  currentContent={getCurrentContent()}
                />
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default BookReader;